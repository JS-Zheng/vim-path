Execute (Path Shortening):

  " Test: Shortening a path with default length
  let path = 'C:\Users\Jason\Projects\vim-plugin'
  AssertEqual 'C:\U\J\P\vim-plugin', path#shorten(path), 'Shortens each component to default length'

  " Test: Shortening a path with specified length
  AssertEqual 'C:\Us\Ja\Pr\vim-plugin', path#shorten(path, 2), 'Shortens each component to specified length'

  " Test: Shortening a path with a length greater than component length
  AssertEqual 'C:\Users\Jason\Projects\vim-plugin', path#shorten(path, 10), 'Retains full component if length greater than component length'

  " Test: Shortening a relative path
  let relative_path = 'Users\Projects\vim-plugin'
  AssertEqual 'U\P\vim-plugin', path#shorten(relative_path), 'Shortens each component of a relative path'

  " Test: Shortening a path with unique substrings
  let unique_path = 'C:\Users\UserName\Projects\vim-plugin'
  AssertEqual 'C:\Users\UserN\Pro\vim-plugin', path#shorten(unique_path, 3), 'Shortens to unique substrings'

  " Test: Shortening a path with similar starting substrings
  let similar_path = 'C:\Projects\project1\project2'
  AssertEqual 'C:\P\project1\project2', path#shorten(similar_path), 'Handles similar starting substrings correctly'

  " Test: Shortening a path with a single component
  AssertEqual 'C:\Users', path#shorten('C:\Users'), 'Correctly handles single component paths'

  " Test: Shortening a path with Unicode characters
  let unicode_path = 'C:\使用者\專案\插件'
  AssertEqual 'C:\使\專\插件', path#shorten(unicode_path), 'Shortens path with Unicode characters'

  " Test: Shortening a path with complex nested directories
  let complex_path = 'C:\Users\UserName\Projects\vim-plugin\deeply\nested\directory\structure'
  AssertEqual 'C:\Users\UserN\P\v\de\n\di\structure', path#shorten(complex_path), 'Shortens a path with complex nested directories'

  " Test: Shortening a path with mixed character types
  let mixed_char_path = 'C:\Users1\user-name\projects_2021\vim-plugin'
  AssertEqual 'C:\U\u\p\vim-plugin', path#shorten(mixed_char_path), 'Shortens a path with mixed character types'

  " Test: Shortening a path with special characters and spaces
  let special_char_path = 'C:\Users\my projects\vim plugin'
  AssertEqual 'C:\U\m\vim plugin', path#shorten(special_char_path), 'Shortens a path with special characters and spaces'

  " Test: Shortening a path with trailing backslash
  let trailing_slash_path = 'C:\Users\Projects\vim-plugin\'
  AssertEqual 'C:\U\P\vim-plugin\', path#shorten(trailing_slash_path), 'Correctly handles path with trailing backslash'

  " Test: Shortening a path while preserving uniqueness
  let similar_names_path = 'C:\projects\project-alpha\project-beta'
  AssertEqual 'C:\projects\project-a\project-beta', path#shorten(similar_names_path, 3), 'Preserves uniqueness while shortening'

